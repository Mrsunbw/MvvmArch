apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["baselibVersionCode"]
        versionName rootProject.ext.android["baselibVersionName"]
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
        }
        testInstrumentationRunner rootProject.ext.android["testInstrumentationRunner"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    //android support
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    //view注入
    api rootProject.ext.dependencies["butterknife"]
    //友盟
    api rootProject.ext.dependencies["umeng-analytics"]
    api rootProject.ext.dependencies["umeng-common"]
    //极光推送
    api rootProject.ext.dependencies["jpush"]
    api rootProject.ext.dependencies["jcore"]
    //json解析
    api rootProject.ext.dependencies["gson"]
    //test
    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso"]
    //内存泄漏
    debugApi rootProject.ext.dependencies["leakcanary"]
    releaseApi rootProject.ext.dependencies["leakcanary-no-op"]
    debugApi rootProject.ext.dependencies["blockcanary"]
    releaseApi rootProject.ext.dependencies["blockcanary-no-op"]
    //silencedut
    api rootProject.ext.dependencies["silencedut-router"]
    annotationProcessor rootProject.ext.dependencies["silencedut-router-compiler"]
    //viewmodel and livedata
    api rootProject.ext.dependencies["lifecycle"]
    //room
    api rootProject.ext.dependencies["room"]
    //http请求
    api rootProject.ext.dependencies["retrofit2"]
    api rootProject.ext.dependencies["retrofit2-convert"]
    //本地缓存
    api rootProject.ext.dependencies["hawk"]
}
